pragma solidity 0.5.16;

import "./HeiHKDToken.sol";

contract TokenSwap {

    string public name = "Hei HKD Token Swap";
    address public owner;

    HeiHKDToken public heiHKDToken;

    mapping(address => boolean) public hasStaked;
    mapping(address => uint256) public stakingBalance;

    constructor(HeiHKDToken _heiHKDToken) public {
        heiHKDToken = _heiHKDToken;
        owner = msg.sender;
    }

    function stakeTokens(uint256 _amount) public {
        require(_amount > 0, "amount must be greater than 0");

        // Transfer mock dai tokens to this contract for staking
        daiToken.transferFrom(msg.sender, address(this), _amount);

        // Update staking balance
        stakingBalance[msg.sender] = stakingBalance[msg.sender] + _amount;

        if (!hasStaked[msg.sender]) {
            stakers.push(msg.sender);
            hasStaked[msg.sender] = true;
            isStaking[msg.sender] = true;
        }
    }
}